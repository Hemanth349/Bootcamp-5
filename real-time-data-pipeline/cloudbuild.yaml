options:
  logging: CLOUD_LOGGING_ONLY

steps:
  # Step 1: Terraform Init
  - name: 'hashicorp/terraform:light'
    entrypoint: 'terraform'
    args: ['init']
    dir: 'real-time-data-pipeline/terraform'

  # Step 2: Terraform Apply
  - name: 'hashicorp/terraform:light'
    entrypoint: 'terraform'
    args: ['apply', '-auto-approve']
    dir: 'real-time-data-pipeline/terraform'

  # Step 3: Create Publisher VM (if not already created)
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'create-vm'
    entrypoint: bash
    args:
      - -c
      - |
        gcloud compute instances create pubsub-publisher-vm \
          --zone=us-central1-a \
          --machine-type=e2-micro \
          --image-family=debian-11 \
          --image-project=debian-cloud \
          --metadata=startup-script='#!/bin/bash
            apt-get update
            apt-get install -y python3-pip
            pip3 install google-cloud-pubsub
            mkdir -p /opt/app' || echo "VM already exists, continuing..."

  # Step 4: Copy publisher.py to the VM
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'copy-script'
    args:
      - compute
      - scp
      - real-time-data-pipeline/pubsub/publisher.py
      - pubsub-publisher-vm:/opt/app/publisher.py
      - --zone=us-central1-a

  # Step 5: Run publisher.py in background
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'start-script'
    entrypoint: bash
    args:
      - -c
      - |
        gcloud compute ssh pubsub-publisher-vm \
          --zone=us-central1-a \
          --command="nohup python3 /opt/app/publisher.py > /opt/app/publisher.log 2>&1 &"
